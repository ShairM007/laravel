# name: Laravel

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:
#   laravel-tests:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
#       with:
#         php-version: '8.0'
#     - uses: actions/checkout@v3
#     - name: Copy .env
#       run: php -r "file_exists('.env') || copy('.env.example', '.env');"
#     - name: Install Dependencies
#       run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#     - name: Generate key
#       run: php artisan key:generate
#     - name: Directory Permissions
#       run: chmod -R 777 storage bootstrap/cache
#     - name: Create Database
#       run: |
#         mkdir -p database
#         touch database/database.sqlite
#     - name: Execute tests (Unit and Feature tests) via PHPUnit
#       env:
#         DB_CONNECTION: sqlite
#         DB_DATABASE: database/database.sqlite
#       run: vendor/bin/phpunit
name: Deploy to AWS EC2

on:
  push:
    branches:
      - "main"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: print Helloo
        run: echo "Hello world"

      # - name: Install Composer dependencies
        # run: composer install --no-dev --optimize-autoloader

      - name: SSH into EC2 instance and deploy
        uses: appleboy/ssh-action@master
        with:
          host: 54.159.27.111
          username: ubuntu
          key: ${{ secrets.SSH_SECTRET_KEY }}
          port: 22
          script: |
            ls
            cd demo-ci-cd
            ls
            git pull origin "main"
            echo "doneeeee"
            cd ../
            sudo cp -r /home/ubuntu/demo-ci-cd /var/www/html
            cd /var/www/html/demo-ci-cd
            cd laravel
            composer install --no-dev
            php artisan key:generate
            sudo nginx -t
            sudo systemctl restart nginx

    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_SECTRET_KEY }}
